`timescale 1ns / 1ps
//////////////////////////////////////////////////////////////////////////////////
// Company: 
// Engineer: 
// 
// Create Date:    16:01:29 10/07/2019 
// Design Name: 
// Module Name:    SubFourBit 
// Project Name: 
// Target Devices: 
// Tool versions: 
// Description: 
//
// Dependencies: 
//
// Revision: 
// Revision 0.01 - File Created
// Additional Comments: 
//
//////////////////////////////////////////////////////////////////////////////////
module SubFourBit #(parameter n=3)(A,B,ALUFlagIn,Cout,Sub,Negative,Zero);
    input [n:0] A;
    input [n:0] B;
    input ALUFlagIn;
    output Cout;
    output [n:0] Sub;
	 output Negative;
	 output Zero;
	wire [n:0] CA;
	wire [n:0] CB;
	wire [n+1:0] carry;
	assign carry[0] = 0;
	wire [n:0] Res;

	 assign CA = A+ALUFlagIn;
	 assign CB = ~(B+ 4'b0010);
	
	
	 genvar i;
	 generate for(i=0; i<n+1; i=i+1)
	 begin: loop
	 SingleBitAdder fss(CA[i], CB[i], carry[i], carry[i+1], Res[i]);
	 end 
	 endgenerate
	 
	 //assign Cout = carry[n+1];
	 //assign Negative = Cout;
	 //assign Zero = (A && B);
	//if (A>=B)
	//begin
		//assign Negative=0;
	//	assign Zero=0;
	
//	end else 
//		if (A<=B) begin
//			assign Negative=1;
	//	end else begin
	//		assign Zero=1;	
		//	end
endmodule
